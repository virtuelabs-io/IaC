AWSTemplateFormatVersion: '2010-09-09'
Description: Elasticsearch Domain resource

Parameters:
    DomainName:
        Description: User defined Elasticsearch Domain name
        Type: String
    ElasticsearchVersion:
        Description: User defined Elasticsearch Version
        Type: String
        Default: '7.7'
        AllowedValues:
            - '7.1'
            - '7.4'
            - '7.7'
    InstanceType:
        Description: Instance type
        Type: String
        Default: 't3.small.elasticsearch'
        AllowedValues:
            - 't2.small.elasticsearch'
            - 't3.small.elasticsearch'
            - 't3.medium.elasticsearch'
            - 'm5.large.elasticsearch'
            - 'r5.large.elasticsearch'
            - 'm5.xlarge.elasticsearch'
            - 'r5.xlarge.elasticsearch'
    InstanceCount:
        Description: Instance type
        Type: String
        Default: '1'
        AllowedValues:
            - '1'
            - '2'
    IOPS:
        Description: IOPS needed
        Type: Number
        Default: 0
    VolumeSize:
        Description: Storage attached to search node
        Type: Number
        Default: 20
        AllowedValues:
            - 20
            - 40
            - 60
            - 80
            - 100
    VolumeType:
        Description: Storage type
        Type: String
        Default: 'standard'
        AllowedValues:
            - standard
    DeployInVPC:
        Description: Deploy inside a VPC?
        Type: String
        Default: 'NO'
        AllowedValues:
            - 'YES'
            - 'NO'
    VPCId:
        Description: VPC into which Elastic search needs to be deployed into
        Type: AWS::EC2::VPC::Id
        Default: ''
    SubnetIds:
        Description: Subnet into which Elastic search needs to be deployed into
        Type: List<AWS::EC2::Subnet::Id>
    DefaultIngressCidrBlock:
        Description: Default Ingress CIDR block to allow access to Elastic Search
        Type: String
        Default: '172.31.0.0/16'
        AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-9]||3[0-2]))$
        ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-32
    AdditionalIngressCidrBlock:
        Description: Additional Ingress CIDR block to allow access to Elastic Search
        Type: String
        AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-9]||3[0-2]))$
        ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-32
    UseCognitoAuthForKibana:
        Description: Use cognito auth for kibana
        Type: String
        Default: 'NO'
        AllowedValues:
            - 'YES'
            - 'NO'
    IdentityPoolId:
        Description: Cognito Identity Pool Id
        Type: String
        Default: ''
    UserPoolId:
        Description: Cognito Identity Pool Id
        Type: String
        Default: ''
    CognitoAuthenticatedUserRoleARN:
        Description: Role assigned to authenticated user
        Type: String
        Default: ''
    ApplicationTag:
        Description: What is this being used for?
        Type: String
        Default: 'Search'

Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            -   Label:
                    default: "Search Configuration"
                Parameters:
                    - DomainName
                    - ElasticsearchVersion
                    - InstanceType
                    - InstanceCount
            -   Label:
                    default: "Storage Configuration"
                Parameters:
                    - IOPS
                    - VolumeSize
                    - VolumeType
            -   Label:
                    default: "Network Configuration"
                Parameters:
                    - DeployInVPC
                    - VPCId
                    - SubnetIds
                    - DefaultIngressCidrBlock
                    - AdditionalIngressCidrBlock
            -   Label:
                    default: "Kibana Access Configuration"
                Parameters:
                    - UseCognitoAuthForKibana
                    - IdentityPoolId
                    - UserPoolId
                    - CognitoAuthenticatedUserRoleARN
            -   Label:
                    default: "Tags"
                Parameters:
                    - ApplicationTag
Conditions:
    EnableEncryption: !Not [!Equals [ !Ref InstanceType, 't2.small.elasticsearch' ]]
    EnableVPCOptions: !Equals [ !Ref DeployInVPC, 'YES' ]
    EnableCognitoOptions: !Equals [ !Ref UseCognitoAuthForKibana, 'YES' ]

Resources:
    ESSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: 'Security group for Elastic Search'
            VpcId: !Ref VPCId
            GroupName: !Sub '${DomainName}_SG'
            SecurityGroupIngress:
                -   FromPort: '443'
                    IpProtocol: tcp
                    ToPort: '443'
                    CidrIp: !Ref DefaultIngressCidrBlock
                -   FromPort: '443'
                    IpProtocol: tcp
                    ToPort: '443'
                    CidrIp: !Ref AdditionalIngressCidrBlock
    ElasticsearchDomain:
        Type: 'AWS::Elasticsearch::Domain'
        Properties:
            DomainName: !Ref DomainName
            ElasticsearchVersion: !Ref ElasticsearchVersion
            ElasticsearchClusterConfig:
                DedicatedMasterEnabled: 'false'
                InstanceCount: !Ref InstanceCount
                InstanceType: !Ref InstanceType
#                ZoneAwarenessEnabled: 'false'
            EBSOptions:
                EBSEnabled: 'true'
                Iops: !Ref IOPS
                VolumeSize: !Ref VolumeSize
                VolumeType: !Ref VolumeType
            CognitoOptions: !If
                - EnableCognitoOptions
                - Enabled: 'true'
                  IdentityPoolId: !Ref IdentityPoolId
                  RoleArn: !Ref CognitoAuthenticatedUserRoleARN
                  UserPoolId: !Ref UserPoolId
                - !Ref 'AWS::NoValue'
            SnapshotOptions:
                AutomatedSnapshotStartHour: '0'
            AccessPolicies:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Principal:
                        AWS:
                          - !Sub 'arn:aws:iam::${AWS::AccountId}:role/virtuelabs_admin'
                          - !Sub 'arn:aws:iam::${AWS::AccountId}:role/virtuelabs_lead_developer'
                          - !Sub "arn:aws:iam::${AWS::AccountId}:root"
                      Action: 'es:*'
                      Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'
                    - Effect: Allow
                      Principal:
                        AWS:
                          - !Sub 'arn:aws:iam::${AWS::AccountId}:user/devops-user'
                      Action: 'es:*'
                      Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'
                    - Effect: Allow
                      Principal:
                        AWS: '*'
                      Action: 'es:*'
                      Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'
                      Condition:
                        IpAddress:
                          "aws:SourceIp": [ !Ref DefaultIngressCidrBlock, !Ref AdditionalIngressCidrBlock ]
            EncryptionAtRestOptions:
                Enabled: !If [EnableEncryption, 'true', 'false']
#            LogPublishingOptions:
#                SEARCH_SLOW_LOGS:
#                    CloudWatchLogsLogGroupArn: >-
#                        arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/aes/domains/es-slow-logs
#                    Enabled: 'false'
#                INDEX_SLOW_LOGS:
#                    CloudWatchLogsLogGroupArn: >-
#                        arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/aes/domains/es-index-slow-logs
#                    Enabled: 'false'
            AdvancedOptions:
                rest.action.multi.allow_explicit_index: 'true'
            Tags:
                - Key: Application
                  Value: !Ref ApplicationTag
            VPCOptions: !If
                - EnableVPCOptions
                - SubnetIds: !Ref SubnetIds
                  SecurityGroupIds:
                    - !Ref ESSecurityGroup
                - !Ref 'AWS::NoValue'
Outputs:
    DomainArn:
        Description: ES ARN
        Value:
            'Fn::GetAtt':
                - ElasticsearchDomain
                - DomainArn
    DomainEndpoint:
        Description: ES Endpoint
        Value:
            'Fn::GetAtt':
                - ElasticsearchDomain
                - DomainEndpoint
    KibanaEndpoint:
        Description: Kibana URL
        Value:
            Fn::Join:
                - ''
                -   - Fn::GetAtt:
                        - ElasticsearchDomain
                        - DomainEndpoint
                    - "/_plugin/kibana/"
